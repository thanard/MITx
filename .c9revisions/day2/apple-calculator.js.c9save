{"ts":1370980984429,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//calculate: evaluate the the value of an arithmetical expression\r\nfunction calculate(text) {\r\n    var pattern = /\\d+(\\.\\d+)?|\\+|\\-|\\*|\\/|\\(|\\)/g;\r\n    var tokens = text.match(pattern);\r\n    try {\r\n        var num_open = 0;\r\n    \tvar num_close = 0;\r\n\t\tif(tokens==null) {\r\n\t\t\tif(isNaN(parseFloat(text))) throw \"Number Expected\";\r\n\t\t\telse return text;\r\n\t\t}\r\n\t\tfor(var i=0;i<tokens.length;i++) {\r\n\t\t\tif (tokens[i]=='(') num_open++;\r\n\t\t\tif (tokens[i]==')') num_close++;\r\n\t\t}\r\n\t\tif(num_open!=num_close) throw \"Ill-formed expression.\";\r\n        var val = evaluate(tokens);\r\n        //if(tokens.length>0) throw \"Ill-formed expression.\";\r\n\t\tif(isNaN(val)) throw \"Number expected\";\r\n        return String(val)\r\n    }\r\n    catch(err) {\r\n        return \"Error: \"+err;\r\n    }\r\n}\r\n\r\n//looks for integer as next item and handles for open parentheses\r\nfunction read_operand(tokens) {\r\n    var first = tokens.shift();\r\n        if(first==\"(\") {\r\n            try {\r\n                if(tokens.indexOf(\")\")==-1) throw \"Missing close-parentheses.\"\r\n            }\r\n            catch(err) {\r\n                return \"Error: \"+err;\r\n            }\r\n            var newInt = evaluate(tokens);\r\n        } else if(first==\"-\") {\r\n\t\t\tvar newInt = -1*parseFloat(tokens.shift());\r\n\t\t}\r\n\t\telse {\r\n            var newInt = parseFloat(first);\r\n        }\r\n\t\treturn newInt\r\n\t\t\r\n}\r\n\r\n//identifies operands and performs operations\r\nfunction evaluate(tokens) {\r\n    try {\r\n        if(tokens.length<1) throw \"Missing operand.\";\r\n    }\r\n    catch(err) {\r\n        return \"Error: \"+err;\r\n    }\r\n    var value = read_operand(tokens);\r\n\tif(isNaN(value)) return value;\r\n    while (tokens.length>0) {\r\n        var operator = tokens.shift();\r\n        if (operator==\")\") {\r\n            return value;\r\n        }\r\n        try {\r\n            if(operator!='+' && operator!='-' && operator!='*' && operator!='/') throw \"Unrecognized operator.\";\r\n            if(tokens.length<1) throw \"Missing operand.\";\r\n        }\r\n        catch(err) {\r\n            return \"Error: \"+err;\r\n        }\r\n        var temp = read_operand(tokens);\r\n\t\ttry {\r\n\t\t\tif(operator=='+') {\r\n\t\t\t\tvalue = value+temp;\r\n\t\t\t} else if(operator=='-') {\r\n\t\t\t\tvalue = value-temp;\r\n\t\t\t} else if(operator=='*') {\r\n\t\t\t\tvalue = value*temp;\r\n\t\t\t} else if(operator=='/') {\r\n\t\t\t\tvalue = value/temp;\r\n\t\t\t}\r\n\t\t\tif(isNaN(value)) throw \"Number expected\";\r\n\t\t}\r\n\t\tcatch(err) {\r\n\t\t\treturn \"Error: \"+err;\r\n\t\t}\r\n    }\r\n    return value;\r\n}\r\n$(document).ready(function() {\r\n    $('#tallButton').bind('click', function(){\r\n        var expression = $('#expression');\r\n        var input = expression.text().trim();\r\n        expression.text(String(calculate(input)));\r\n    });\r\n    \r\n    $('.button').bind('click',function() {\r\n        var func = $(this).html()\r\n        switch (func) {\r\n            case \"MC\":\r\n                break\r\n            case \"M+\":\r\n                break\r\n            case \"M-\":\r\n        }\r\n    });\r\n});"]],"start1":0,"start2":0,"length1":0,"length2":2912}]],"length":2912}
{"contributors":[],"silentsave":false,"ts":1370981366666,"patch":[[{"diffs":[[0,"nction() {\r\n"],[1,"        console.log(\"we are here\")\r\n"],[0,"        var "]],"start1":2699,"start2":2699,"length1":24,"length2":60}]],"length":2948,"saved":false}
{"contributors":[],"silentsave":false,"ts":1370981374214,"patch":[[{"diffs":[[0,"nction() {\r\n"],[1,"    \r\n    var tokens=[];\r\n    \r\n"],[0,"    $('#tall"]],"start1":2449,"start2":2449,"length1":24,"length2":56},{"diffs":[[0,"    "],[-1,"console.log(\"we are here\")\r\n        var func = $(this).html()"],[1,"var func = $(this).html()\r\n        tokens.push(func);\r\n        console.log(tokens);"],[0,"\r\n  "]],"start1":2747,"start2":2747,"length1":69,"length2":91}]],"length":3002,"saved":false}
{"ts":1370981419573,"patch":[[{"diffs":[[0,"ush(func);\r\n"],[1,"        console.log(func);\r\n"],[0,"        cons"]],"start1":2794,"start2":2794,"length1":24,"length2":52}]],"length":3030,"saved":false}
{"contributors":[],"silentsave":false,"ts":1370981680768,"patch":[[{"diffs":[[0,"on() {\r\n"],[-1,"    \r\n"],[0,"    var "]],"start1":2453,"start2":2453,"length1":22,"length2":16},{"diffs":[[0,"ns=[];\r\n"],[-1,"    \r\n"],[0,"    $('#"]],"start1":2473,"start2":2473,"length1":22,"length2":16},{"diffs":[[0,"nction() {\r\n"],[1,"        console.log(\"we are here\")\r\n"],[0,"        var "]],"start1":2719,"start2":2719,"length1":24,"length2":60},{"diffs":[[0,");\r\n"],[-1,"        console.log(func);\r\n"],[0,"    "]],"start1":2826,"start2":2826,"length1":36,"length2":8}]],"length":3026,"saved":false}
{"ts":1370981712107,"patch":[[{"diffs":[[0,"is)."],[-1,"html"],[1,"text"],[0,"()\r\n"]],"start1":2790,"start2":2790,"length1":12,"length2":12}]],"length":3026,"saved":false}
{"ts":1370982504533,"patch":[[{"diffs":[[-1,"//calculate: evaluate the the value of an arithmetical expression\r\n"],[0,"func"]],"start1":0,"start2":0,"length1":71,"length2":4},{"diffs":[[0,"te(text)"],[-1," "],[1,"{\r\n    try"],[0,"{\r\n    "],[1,"    "],[0,"var patt"]],"start1":16,"start2":16,"length1":24,"length2":37},{"diffs":[[0,"tern"],[-1," = /\\d+(\\.\\d+)?|\\+|\\-|\\*|\\/|\\(|\\)"],[1,"=/[0-9]*\\.[0-9]+|[0-9]+|\\+|\\-|\\*|\\/|\\(|\\)|sin|cos|tan|log|sqrt"],[0,"/g;\r\n"],[1,"    "],[0,"    "]],"start1":52,"start2":52,"length1":46,"length2":79},{"diffs":[[0,"    "],[-1,"try {\r\n        var num_open = 0;\r\n    \tvar num_close = 0;\r\n\t\tif(tokens==null) {\r\n\t\t\tif(isNaN(parseFloat(text))) throw \"Number Expected\";\r\n\t\t\telse return text;\r\n\t\t}\r\n\t\tfor(var i=0;i<tokens.length;i++) {\r\n\t\t\tif (tokens[i]=='(') num_open++;\r\n\t\t\tif (tokens[i]==')') num_close++;\r\n\t\t}\r\n\t\tif(num_open!=num_close) throw \"Ill-formed expression.\""],[1,"    //console.log(JSON.stringify(tokens))"],[0,";\r\n "]],"start1":166,"start2":166,"length1":345,"length2":49},{"diffs":[[0,"r val = "],[-1,"evaluate"],[1,"read_term"],[0,"(tokens)"]],"start1":224,"start2":224,"length1":24,"length2":25},{"diffs":[[0,"    "],[-1,"//"],[0,"if"],[1," "],[0,"(tok"]],"start1":256,"start2":256,"length1":12,"length2":11},{"diffs":[[0,"ngth"],[-1,">0)"],[1,"!==0){\r\n           "],[0," throw \""],[-1,"I"],[1,"i"],[0,"ll-f"]],"start1":273,"start2":273,"length1":20,"length2":36},{"diffs":[[0,"sion"],[-1,"."],[0,"\";\r\n"],[-1,"\t\tif(isNaN(val)) throw \"Number expected\";\r\n"],[1,"        }else{\r\n    "],[0,"    "]],"start1":321,"start2":321,"length1":56,"length2":32},{"diffs":[[0,"ing(val)"],[1,";\r\n        } "],[0,"\r\n    }\r"]],"start1":367,"start2":367,"length1":16,"length2":29},{"diffs":[[0,"\r\n    catch(err)"],[-1," "],[0,"{\r\n        retur"]],"start1":395,"start2":395,"length1":33,"length2":32},{"diffs":[[0,"     return "],[-1,"\"Error: \"+"],[0,"err;\r\n    }\r"]],"start1":417,"start2":417,"length1":34,"length2":24},{"diffs":[[0," }\r\n"],[-1,"}\r\n\r\n//looks for integer as next item and handles for open parentheses"],[1,"    //return JSON.stringify(tokens);\r\n}\r\n    \r\n//read operand gets called by evaluate"],[0,"\r\nfu"]],"start1":438,"start2":438,"length1":78,"length2":93},{"diffs":[[0,"operand("],[-1,"tokens) "],[1,"array)"],[0,"{\r\n    v"]],"start1":543,"start2":543,"length1":24,"length2":22},{"diffs":[[0,"var "],[-1,"first = tokens.shift();\r\n        if(first==\"(\") {\r\n            try {\r\n                if(tokens.indexOf(\")\")==-1) throw \"Missing close-parentheses.\"\r\n            }\r\n            catch(err) {"],[1,"num=array[0];\r\n    array.shift();\r\n    //check if it is an open paren\r\n    if (num=='('){\r\n        var temp1=evaluate(array);\r\n        if(array[0]==')'){\r\n            num=temp1;\r\n            array.shift();\r\n        }else{\r\n            throw \") is not found\";\r\n        }\r\n    }\r\n    if(num=='-'){\r\n        num=-read_operand(array);"],[0,"\r\n    "],[1,"}\r\n"],[0,"    "],[-1,"        return \"Error: \"+err"],[1,"if(num=='sin'){\r\n        num=Math.sin(read_operand(array))"],[0,";\r\n    "],[1,"}\r\n"],[0,"    "],[-1,"    }"],[1,"if(num=='log'){\r\n        num=Math.log(read_operand(array));"],[0,"\r\n    "],[1,"}\r\n"],[0,"    "],[-1,"    var newInt = evaluate(tokens"],[1,"if(num=='cos'){\r\n        num=Math.cos(read_operand(array)"],[0,");\r\n    "],[1,"}\r\n"],[0,"    "],[-1,"} else if(first==\"-\") {\r\n\t\t\tvar newInt = -1*parseFloat(tokens.shift());\r\n\t\t}\r\n\t\telse {\r\n            var newInt = parseFloat(first);"],[1,"if(num=='tan'){\r\n        num=Math.tan(read_operand(array));\r\n    }\r\n    if(isNaN(parseInt(num))){\r\n        throw \"number expected\";\r\n    }else{"],[0,"\r\n  "]],"start1":564,"start2":564,"length1":436,"length2":710},{"diffs":[[0,"    "],[-1,"}\r\n\t\t"],[0,"return "],[-1,"newInt\r\n\t\t\r\n}\r\n\r\n//identifies operands and performs operations\r\nfunction evaluate(tokens) {\r\n    try {\r\n        if(tokens.length<1)"],[1,"parseFloat(num);\r\n    }\r\n}\r\n\r\n//evaluate text in the text field\r\nfunction evaluate(array){\r\n    if (array.length === 0){\r\n       "],[0," throw \""],[-1,"M"],[1,"m"],[0,"issi"]],"start1":1276,"start2":1276,"length1":160,"length2":153},{"diffs":[[0,"\"missing operand"],[-1,"."],[0,"\";\r\n    }\r\n    c"]],"start1":1423,"start2":1423,"length1":33,"length2":32},{"diffs":[[0,"   }"],[-1,"\r\n    catch(err) {\r\n        return \"Error: \"+err;"],[1,"else{\r\n        var value=read_operand(array);\r\n        //stop either when the array is empty or the next one is a closed paren"],[0,"\r\n    "],[-1,"}\r\n"],[0,"    "],[-1,"var value = read_operand(tokens);\r\n\tif(isNaN(value)) return value;\r\n    while (tokens.length>0) {\r\n"],[1,"while(array.length!==0 && array[0]!=')'){\r\n            var operator = array[0];\r\n            array.shift();\r\n            if (array.length===0){\r\n                throw \"missing operand\";\r\n            }\r\n            else if (operator=='+'||operator=='-'||operator=='*'||operator=='/'){\r\n       "],[0,"        "],[1," "],[0,"var "],[-1,"operator = tokens.shift();\r\n"],[1,"temp=read_operand(array);\r\n       "],[0,"        "],[1," "],[0,"if ("]],"start1":1444,"start2":1444,"length1":217,"length2":492},{"diffs":[[0,"or=="],[-1,"\")\") "],[1,"'+')"],[0,"{\r\n "]],"start1":1942,"start2":1942,"length1":13,"length2":12},{"diffs":[[0,"        "],[-1,"return value"],[1,"        value=value+temp"],[0,";\r\n     "]],"start1":1957,"start2":1957,"length1":28,"length2":40},{"diffs":[[0,"    "],[-1,"}\r\n"],[0,"        "],[-1,"try {"],[1,"}"],[0,"\r\n  "]],"start1":1996,"start2":1996,"length1":24,"length2":17},{"diffs":[[0,"        "],[1,"    else "],[0,"if(opera"]],"start1":2015,"start2":2015,"length1":16,"length2":25},{"diffs":[[0,"ator"],[-1,"!='+' && operator!='-' && "],[1,"=='-'){\r\n                    value=value-temp;\r\n                }\r\n                else if("],[0,"operator"],[-1,"!"],[1,"="],[0,"='*'"],[-1," && operator!='/')"],[1,"){\r\n                    value=value*temp;\r\n                }\r\n                else{\r\n                    value=value/temp;\r\n                }\r\n            }else{\r\n               "],[0," throw \""],[-1,"U"],[1,"u"],[0,"nrec"]],"start1":2039,"start2":2039,"length1":74,"length2":299},{"diffs":[[0,"operator"],[-1,"."],[0,"\";\r\n    "]],"start1":2346,"start2":2346,"length1":17,"length2":16},{"diffs":[[0,"    "],[-1,"if(tokens.length<1)"],[1,"}\r\n        }\r\n        return value;\r\n    }\r\n}\r\n\r\n//to read first time to evaluate everything except +,-, numbers\r\nfunction read_term(array){\r\n    var newarray=[];\r\n    if (array.length === 0){\r\n       "],[0," throw \""],[-1,"M"],[1,"m"],[0,"issi"]],"start1":2366,"start2":2366,"length1":36,"length2":218},{"diffs":[[0,"rand"],[-1,"."],[0,"\";\r\n    "],[-1,"    }\r\n        catch(err) {\r\n            return \"Error: \"+err;\r\n"],[1,"}else{\r\n        while(array.length!==0){\r\n                var next = array[0];\r\n                array.shift();\r\n                if (array.length===0){\r\n                    throw \"missing operand\";\r\n                }\r\n                else if (/[0-9]*\\.[0-9]+|[0-9]+/.test(next)){\r\n                    newarray.push(next);\r\n     "],[0,"        "],[1,"   "],[0,"}\r\n"],[1,"                else if (next=='*'||next=='/'){\r\n            "],[0,"    "]],"start1":2590,"start2":2590,"length1":92,"length2":418},{"diffs":[[0,"var temp"],[-1," = "],[1,"="],[0,"read_ope"]],"start1":3012,"start2":3012,"length1":19,"length2":17},{"diffs":[[0,"and("],[-1,"tokens);\r\n\t\ttry {\r\n\t\t\tif(operator=='+"],[1,"array);\r\n                    if(next=='*"],[0,"')"],[-1," "],[0,"{\r\n"],[-1,"\t\t\t\tvalue = value+temp;\r\n\t\t\t} else if(operator=='-') {\r\n\t\t\t\tvalue = value-"],[1,"                        var temp1=newarray[newarray.length-1];\r\n                        newarray.pop();\r\n                        newarray.push(temp1*"],[0,"temp"],[1,")"],[0,";\r\n"],[-1,"\t\t\t} else if(operator=='*') {\r\n\t\t\t\tvalue = value*"],[1,"                    }\r\n                    else{\r\n                        var temp2=newarray[newarray.length-1];\r\n                        newarray.pop();\r\n                        newarray.push(temp2/"],[0,"temp"],[1,")"],[0,";\r\n"],[-1,"\t\t\t} else if(operator=='/"],[1,"                    }\r\n                }else if(next=='+'||next=='-"],[0,"')"],[-1," "],[0,"{\r\n"],[-1,"\t\t\t\tvalue = value/temp;\r\n\t\t\t}\r\n\t\t\tif(isNaN(value)) throw \"Number expected\";\r\n\t\t}\r\n\t\tcatch(err) {\r\n\t\t\treturn \"Error: \"+err;\r\n\t\t}\r\n    }"],[1,"                        newarray.push(next);\r\n                }else{\r\n                    throw \"unrecognized operator\";\r\n                }\r\n        }\r\n    }\r\n    console.log(newarray);"],[0,"\r\n  "]],"start1":3030,"start2":3030,"length1":353,"length2":674},{"diffs":[[0,"urn "],[1,"e"],[0,"valu"],[-1,"e;\r\n}"],[1,"ate(newarray);\r\n}\r\n\r\nfunction convert_simbole"],[0,"\r\n$("]],"start1":3709,"start2":3709,"length1":17,"length2":58},{"diffs":[[0," tokens="],[-1,"[]"],[1,"\"\""],[0,";\r\n    $"]],"start1":3804,"start2":3804,"length1":18,"length2":18},{"diffs":[[0,"    var "],[-1,"func"],[1,"inp"],[0," = $(thi"]],"start1":4107,"start2":4107,"length1":20,"length2":19},{"diffs":[[0,"kens"],[-1,".push(func)"],[1,"+=inp"],[0,";\r\n "]],"start1":4147,"start2":4147,"length1":19,"length2":13},{"diffs":[[0,"\n       "],[1," //"],[0," switch "]],"start1":4188,"start2":4188,"length1":16,"length2":19},{"diffs":[[0,"switch ("],[-1,"func"],[1,"inp"],[0,") {\r\n   "]],"start1":4200,"start2":4200,"length1":20,"length2":19},{"diffs":[[0," {\r\n        "],[1,"//"],[0,"    "],[1," "],[0,"case \"MC\":\r\n"]],"start1":4212,"start2":4212,"length1":28,"length2":31},{"diffs":[[0,"e \"MC\":\r\n       "],[1," //"],[0,"         break\r\n"]],"start1":4234,"start2":4234,"length1":32,"length2":35},{"diffs":[[0,"  break\r\n       "],[1," //"],[0,"     case \"M+\":\r"]],"start1":4260,"start2":4260,"length1":32,"length2":35},{"diffs":[[0,"e \"M+\":\r\n       "],[1," //"],[0,"         break\r\n"]],"start1":4287,"start2":4287,"length1":32,"length2":35},{"diffs":[[0,"eak\r\n       "],[1," //"],[0,"     case \"M"]],"start1":4317,"start2":4317,"length1":24,"length2":27},{"diffs":[[0,"e \"M-\":\r\n       "],[1," //"],[0," }\r\n    });\r\n});"]],"start1":4340,"start2":4340,"length1":32,"length2":35}]],"length":4375,"saved":false}
{"ts":1370982661848,"patch":[[{"diffs":[[0,"rt_s"],[-1,"i"],[1,"y"],[0,"mbol"],[-1,"e"],[1,"(b){\r\n    if(b=='&#215'){\r\n        return '*';\r\n    }else if(b='&#247'){\r\n        return '/';\r\n    }\r\n}"],[0,"\r\n$("]],"start1":3753,"start2":3753,"length1":14,"length2":116}]],"length":4477,"saved":false}
{"ts":1370982675523,"patch":[[{"diffs":[[0,"eturn '/';\r\n"],[1,"    }else{\r\n        return b;\r\n"],[0,"    }\r\n}\r\n$("]],"start1":3845,"start2":3845,"length1":24,"length2":55}]],"length":4508,"saved":false}
{"ts":1370982688779,"patch":[[{"diffs":[[0,"se if(b="],[1,"="],[0,"'&#247')"]],"start1":3817,"start2":3817,"length1":16,"length2":17}]],"length":4509,"saved":false}
{"ts":1370982707218,"patch":[[{"diffs":[[0,"tokens+="],[1,"convert_symbol("],[0,"inp"],[1,")"],[0,";\r\n     "]],"start1":4279,"start2":4279,"length1":19,"length2":35}]],"length":4525,"saved":false}
{"ts":1370982739022,"patch":[[{"diffs":[[0,"lculate("],[-1,"input"],[1,"tokens"],[0,")));\r\n  "]],"start1":4123,"start2":4123,"length1":21,"length2":22}]],"length":4526,"saved":false}
{"ts":1370982884403,"patch":[[{"diffs":[[0," '/';\r\n    }else"],[1," if(b=='='){\r\n        return '';\r\n    else"],[0,"{\r\n        retur"]],"start1":3851,"start2":3851,"length1":32,"length2":74}]],"length":4568,"saved":false}
{"ts":1370982888107,"patch":[[{"diffs":[[0,"rn '';\r\n    "],[1,"}"],[0,"else{\r\n     "]],"start1":3893,"start2":3893,"length1":24,"length2":25}]],"length":4569,"saved":false}
{"ts":1370982962185,"patch":[[{"diffs":[[0,"r val = "],[-1,"read_term"],[1,"evaluate"],[0,"(tokens)"]],"start1":224,"start2":224,"length1":25,"length2":24}]],"length":4568,"saved":false}
{"ts":1370983027919,"patch":[[{"diffs":[[0,"symbol(b){\r\n"],[1,"    console.log(b);\r\n"],[0,"    if(b=='&"]],"start1":3755,"start2":3755,"length1":24,"length2":45}]],"length":4589,"saved":false}
{"ts":1370983502087,"patch":[[{"diffs":[[0,"$(this)."],[-1,"text"],[1,"html"],[0,"()\r\n    "]],"start1":4319,"start2":4319,"length1":20,"length2":20}]],"length":4589,"saved":false}
{"ts":1370983556323,"patch":[[{"diffs":[[0,"b=='"],[-1,"&#215"],[1,"×"],[0,"'){\r"]],"start1":3795,"start2":3795,"length1":13,"length2":9},{"diffs":[[0,"b=='"],[-1,"&#247"],[0,"'){\r"]],"start1":3839,"start2":3839,"length1":13,"length2":8}]],"length":4580,"saved":false}
{"ts":1370983565131,"patch":[[{"diffs":[[0," if(b=='"],[1,"&#247"],[0,"'){\r\n   "]],"start1":3835,"start2":3835,"length1":16,"length2":21}]],"length":4585,"saved":false}
{"ts":1370983625166,"patch":[[{"diffs":[[0,"is)."],[-1,"html"],[1,"text"],[0,"()\r\n"]],"start1":4319,"start2":4319,"length1":12,"length2":12}]],"length":4585,"saved":false}
{"ts":1370983754472,"patch":[[{"diffs":[[0,"text()\r\n"],[1,"        console.log($(this)).data('multiply')\r\n"],[0,"        "]],"start1":4323,"start2":4323,"length1":16,"length2":63}]],"length":4632,"saved":false}
{"ts":1370983755868,"patch":[[{"diffs":[[0,"ltiply')"],[1,";"],[0,"\r\n      "]],"start1":4368,"start2":4368,"length1":16,"length2":17}]],"length":4633,"saved":false}
{"ts":1370983760974,"patch":[[{"diffs":[[0,"e here\")"],[1,";"],[0,"\r\n      "]],"start1":4287,"start2":4287,"length1":16,"length2":17},{"diffs":[[0,").text()"],[1,";"],[0,"\r\n      "]],"start1":4322,"start2":4322,"length1":16,"length2":17}]],"length":4635,"saved":false}
{"ts":1370983780057,"patch":[[{"diffs":[[0,"ta('"],[-1,"multiply"],[1,"operator"],[0,"');\r"]],"start1":4364,"start2":4364,"length1":16,"length2":16}]],"length":4635,"saved":false}
{"ts":1370983814244,"patch":[[{"diffs":[[0,"($(this)"],[-1,")"],[0,".data('o"]],"start1":4352,"start2":4352,"length1":17,"length2":16},{"diffs":[[0,"erator')"],[1,")"],[0,";\r\n     "]],"start1":4369,"start2":4369,"length1":16,"length2":17}]],"length":4635,"saved":false}
{"ts":1370983951102,"patch":[[{"diffs":[[0,"    "],[-1,"console.log($(this).data('operator')"],[1,"if(typeof $(this).data('operator') !='undefined'){\r\n            inp=$(this).data('operator');\r\n        }\r\n        console.log("],[0,");\r\n"]],"start1":4337,"start2":4337,"length1":44,"length2":134}]],"length":4725,"saved":false}
{"ts":1370984389506,"patch":[[{"diffs":[[0,"tokens=\"\";\r\n"],[1,"    var number=\"\";\r\n"],[0,"    $('#tall"]],"start1":3998,"start2":3998,"length1":24,"length2":44},{"diffs":[[0,"e.log(tokens);\r\n"],[1,"        \r\n        \r\n"],[0,"        // switc"]],"start1":4543,"start2":4543,"length1":32,"length2":52}]],"length":4765,"saved":false}
{"ts":1370984477590,"patch":[[{"diffs":[[0,"\";\r\n"],[-1,"    var number=\"\";\r\n"],[0,"    "]],"start1":4006,"start2":4006,"length1":28,"length2":8},{"diffs":[[0,"ns);\r\n        \r\n"],[1,"        if(/[0-9]*\\.[0-9]+|[0-9]+/.test(inp)){\r\n            \r\n        }\r\n"],[0,"        \r\n      "]],"start1":4533,"start2":4533,"length1":32,"length2":105}]],"length":4818,"saved":false}
{"ts":1370984536334,"patch":[[{"diffs":[[0,"f(/[0-9]"],[-1,"*"],[1,"|"],[0,"\\."],[-1,"[0-9]+|[0-9]+"],[0,"/.test(i"]],"start1":4558,"start2":4558,"length1":32,"length2":19},{"diffs":[[0,"){\r\n            "],[1,"$('#expression').append(inp);"],[0,"\r\n        }\r\n   "]],"start1":4580,"start2":4580,"length1":32,"length2":61}]],"length":4834,"saved":false}
{"ts":1370984610094,"patch":[[{"diffs":[[0,").append(inp);\r\n"],[1,"        }else{\r\n            $('#operator').text($(this).text());\r\n\r\n"],[0,"        }\r\n     "]],"start1":4611,"start2":4611,"length1":32,"length2":100}]],"length":4902,"saved":false}
{"ts":1370984611796,"patch":[[{"diffs":[[0,"xt());\r\n"],[-1,"\r\n"],[0,"        "]],"start1":4685,"start2":4685,"length1":18,"length2":16}]],"length":4900,"saved":false}
{"contributors":[],"silentsave":false,"ts":1370998397265,"patch":[[{"diffs":[[0," }\r\n"],[-1,"        console.log();\r\n"],[0,"    "]],"start1":4443,"start2":4443,"length1":32,"length2":8},{"diffs":[[0,").append(inp);\r\n"],[1,"        }else if(inp=='C'){\r\n            $('#expression').text('0');\r\n"],[0,"        }else{\r\n"]],"start1":4587,"start2":4587,"length1":32,"length2":102}]],"length":4946,"saved":false}
{"ts":1370998583272,"patch":[[{"diffs":[[0,"');\r\n        }\r\n"],[1,"        if(tokens.charAt(tokens.length-1)=='+'||tokens.charAt(tokens.length-1)=='-'||tokens.charAt(tokens.length-1)=='*'||tokens.charAt(tokens.length-1)=='/'){\r\n            \r\n        }\r\n"],[0,"        tokens+="]],"start1":4431,"start2":4431,"length1":32,"length2":218}]],"length":5132,"saved":false}
{"contributors":[],"silentsave":false,"ts":1371001163763,"patch":[[{"diffs":[[0,"tokens=\"\";\r\n"],[1,"    var isRemove=false;\r\n"],[0,"    $('#tall"]],"start1":3998,"start2":3998,"length1":24,"length2":49}]],"length":5157,"saved":false}
{"ts":1371001452165,"patch":[[{"diffs":[[0,"){\r\n            "],[1,"tokens=tokens.splice(0,tokens.length-1)+"],[0,"\r\n"],[-1,""],[0,"        }\r\n     "]],"start1":4629,"start2":4629,"length1":34,"length2":74},{"diffs":[[0,"est(inp)){\r\n"],[1,"            if($('#expression').text()=='0'){\r\n                \r\n            }\r\n"],[0,"            "]],"start1":4799,"start2":4799,"length1":24,"length2":104},{"diffs":[[0,"inp=='C'){\r\n"],[-1,""],[0,"            "]],"start1":4951,"start2":4951,"length1":24,"length2":24},{"diffs":[[0,"text('0');\r\n"],[1,"            tokens=[];\r\n"],[0,"        }els"]],"start1":4992,"start2":4992,"length1":24,"length2":48}]],"length":5301,"saved":false}
{"ts":1371001455487,"patch":[[{"diffs":[[0," tokens="],[-1,"[]"],[1,"\"\""],[0,";\r\n     "]],"start1":5015,"start2":5015,"length1":18,"length2":18}]],"length":5301,"saved":false}
{"ts":1371001563850,"patch":[[{"diffs":[[0," if("],[-1,"tokens.charAt(tokens.length-1)=='+'||tokens.charAt(tokens.length-1)=='-'||tokens.charAt(tokens.length-1)=='*'||tokens.charAt(tokens.length-1)"],[1,"inp=='+'||inp=='-'||inp=='*'||inp"],[0,"=='/"]],"start1":4479,"start2":4479,"length1":149,"length2":41}]],"length":5193,"saved":false}
{"ts":1371001569394,"patch":[[{"diffs":[[0,"ngth-1)+"],[1,"inp;"],[0,"\r\n      "]],"start1":4569,"start2":4569,"length1":16,"length2":20}]],"length":5197,"saved":false}
{"ts":1371001634392,"patch":[[{"diffs":[[0,"th-1)+inp;\r\n"],[1,"            isRemove=true;\r\n"],[0,"        }\r\n "]],"start1":4571,"start2":4571,"length1":24,"length2":52}]],"length":5225,"saved":false}
{"ts":1371001710615,"patch":[[{"diffs":[[0,"t()=='0'"],[1,"||isRemove=true"],[0,"){\r\n    "]],"start1":4770,"start2":4770,"length1":16,"length2":31},{"diffs":[[0,"                "],[1,"$('#expression').text('');\r\n                isRemove=false;"],[0,"\r\n            }\r"]],"start1":4797,"start2":4797,"length1":32,"length2":91}]],"length":5299,"saved":false}
{"ts":1371001758125,"patch":[[{"diffs":[[0," if("],[-1,"$('#expression').text()=='0'||"],[0,"isRe"]],"start1":4746,"start2":4746,"length1":38,"length2":8}]],"length":5269,"saved":false}
{"ts":1371001798900,"patch":[[{"diffs":[[0,"     if("],[1,"$('#expression').text()=='0'||"],[0,"isRemove"]],"start1":4742,"start2":4742,"length1":16,"length2":46}]],"length":5299,"saved":false}
{"ts":1371001851114,"patch":[[{"diffs":[[0,"'||isRemove="],[1,"="],[0,"true){\r\n    "]],"start1":4777,"start2":4777,"length1":24,"length2":25}]],"length":5300,"saved":false}
{"ts":1371001861238,"patch":[[{"diffs":[[0,"Remove=="],[1,"="],[0,"true){\r\n"]],"start1":4782,"start2":4782,"length1":16,"length2":17}]],"length":5301,"saved":false}
{"ts":1371001905449,"patch":[[{"diffs":[[0,"    "],[-1,"if(inp=='+'||inp=='-'||inp=='*'||inp=='/'){\r\n            tokens=tokens.splice(0,tokens.length-1)+inp;\r\n            isRemove=true;\r\n        }"],[0,"\r\n  "]],"start1":4476,"start2":4476,"length1":148,"length2":8},{"diffs":[[0,";\r\n        }else"],[1," if"],[0,"{\r\n            $"]],"start1":4885,"start2":4885,"length1":32,"length2":35}]],"length":5164,"saved":false}
{"ts":1371001918562,"patch":[[{"diffs":[[0,"}else if"],[-1,"{"],[1,"(inp=='+'||inp=='-'||inp=='*'||inp=='/'){\r\n            tokens=tokens.splice(0,tokens.length-1)+inp;\r\n            isRemove=true;"],[0,"\r\n      "]],"start1":4896,"start2":4896,"length1":17,"length2":143}]],"length":5290,"saved":false}
{"ts":1371002143274,"patch":[[{"diffs":[[0,"ns.s"],[-1,"plice"],[1,"ubstring"],[0,"(0,t"]],"start1":4970,"start2":4970,"length1":13,"length2":16}]],"length":5293,"saved":false}
{"contributors":[],"silentsave":true,"ts":1371060787232,"patch":[[{"diffs":[[0,"  }\r\n}\r\n"],[1,"z"],[0,"$(docume"]],"start1":3950,"start2":3950,"length1":16,"length2":17}]],"length":5294,"saved":false}
{"ts":1371060788635,"patch":[[{"diffs":[[0,"  }\r\n}\r\n"],[-1,"z"],[0,"$(docume"]],"start1":3950,"start2":3950,"length1":17,"length2":16}]],"length":5293,"saved":false}
